{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:promise/recommended",
        "plugin:sonarjs/recommended",
        "plugin:react-hooks/recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        // "plugin:import/warns",
        "plugin:import/warnings",
        "plugin:import/typescript"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "tsconfigRootDir": "."
    },
    "plugins": [
        "react",
        "react-hooks",
        "promise",
        "optimize-regex",
        "sonarjs",
        "@typescript-eslint"
    ],
    "rules": {
        "indent": ["error", 4],
        "quotes": [2, "single", { "avoidEscape": true }],
        "import/no-default-export": "warn",
        "import/order": "warn",
        "no-shadow": ["warn"],
        "no-duplicate-imports": ["warn", { "includeExports": true }],
        "no-template-curly-in-string": "warn",
        "block-scoped-var": "warn",
        "curly": ["warn", "all"],
        "eqeqeq": "warn",
        "max-classes-per-file": ["warn", 1],
        "no-alert": "warn",
        "no-console": "warn",
        "no-implicit-coercion": "warn",
        "no-labels": "warn",
        "no-lone-blocks": "warn",
        "no-multi-spaces": "warn",
        "no-negated-condition": "warn",
        "no-new": "warn",
        "no-new-func": "warn",
        "no-new-wrappers": "warn",
        "no-return-await": "warn",
        "no-self-compare": "warn",
        "no-sequences": "warn",
        "no-throw-literal": "warn",
        "no-unused-expressions": ["warn", { "allowShortCircuit": true, "allowTernary": true }],
        "no-useless-call": "warn",
        "no-useless-concat": "warn",
        "no-useless-return": "warn",
        "prefer-promise-reject-errors": "warn",
        "radix": "warn",
        "no-undefined": "off",
        "array-bracket-newline": ["warn", "consistent"],
        "comma-dangle": ["warn", "always-multiline"],
        "comma-style": "warn",
        "eol-last": "warn",
        "key-spacing": "warn",
        "keyword-spacing": "warn",
        "new-parens": "warn",
        "no-bitwise": "warn",
        "no-lonely-if": "warn",
        "no-multiple-empty-lines": "warn",
        "no-nested-ternary": "warn",
        "no-new-object": "warn",
        "no-trailing-spaces": "warn",
        "no-unneeded-ternary": "warn",
        "no-whitespace-before-property": "warn",
        "object-curly-newline": "warn",
        "object-curly-spacing": ["warn", "always"],
        "semi-spacing": "warn",
        "space-before-blocks": "warn",
        "space-before-function-paren": [
            "warn",
            {
                "anonymous": "always",
                "named": "never",
                "asyncArrow": "always"
            }
        ],
        "space-in-parens": "warn",
        "space-infix-ops": "warn",
        "space-unary-ops": "warn",
        "switch-colon-spacing": "warn",
        "arrow-body-style": ["warn", "as-needed"],
        // "arrow-parens": ["warn", "as-needed"],
        "arrow-spacing": "warn",
        "generator-star-spacing": ["warn", "after"],
        "no-useless-computed-key": "warn",
        "no-useless-rename": "warn",
        "object-shorthand": ["warn", "always"],
        "prefer-arrow-callback": "warn",
        "prefer-destructuring": "off",
        "rest-spread-spacing": ["warn", "never"],
        "template-curly-spacing": "warn",
        "promise/prefer-await-to-then": "warn",
        "promise/always-return": "off",
        "optimize-regex/optimize-regex": "warn",
        "@typescript-eslint/member-delimiter-style": ["warn", { "multiline": { "delimiter": "semi" } }],
        "@typescript-eslint/member-ordering": "off", // иначе ругается на flow экшны mobx
        "@typescript-eslint/brace-style": ["warn", "1tbs"],
        "@typescript-eslint/quotes": ["warn", "single", { "avoidEscape": true }],
        "@typescript-eslint/func-call-spacing": ["warn", "never"],
        "@typescript-eslint/no-useless-constructor": "warn",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/no-parameter-properties": "warn",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-readonly": "warn",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/camelcase": "off", // https://github.com/typescript-eslint/typescript-eslint/issues/2077
        "@typescript-eslint/explicit-function-return-type": ["warn", { "allowExpressions": true }],
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_$" }],
        "@typescript-eslint/no-floating-promises": ["off", { "ignoreVoid": true, "ignoreIIFE": true }],
        "@typescript-eslint/explicit-module-boundary-types": "warn",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/restrict-template-expressions": ["warn", {"allowAny": true}],
        "@typescript-eslint/unbound-method": "warn",
        "react/no-access-state-in-setstate": "warn",
        "react/no-danger": "warn",
        "react/no-multi-comp": "warn",
        "react/no-this-in-sfc": "warn",
        "react/prefer-stateless-function": "warn",
        "react/jsx-filename-extension": ["warn", { "extensions": [".tsx"] }],
        "react/jsx-no-bind": "off",
        "react/jsx-handler-names": "off",
        "react/jsx-no-useless-fragment": "warn",
        "react/jsx-pascal-case": "warn",
        "react-hooks/rules-of-hooks": "warn",
        "react/prop-types": "off",
        "react/react-in-jsx-scope": "off",
        "sonarjs/cognitive-complexity": "off",
        "sonarjs/no-duplicate-string": "off"
    }
}
